{"version":3,"sources":["app.js","galeria.js"],"names":["navegacionFija","barra","document","querySelector","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","scrollNav","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","target","attributes","href","value","scrollIntoView","behavior","crearGaleria","galeria","i","imagen","createElement","src","dataset","imagenId","onclick","mostrarImagen","lista","appendChild","id","parseInt","overlay","cerrarImagen","textContent","body"],"mappings":"AAMA,SAAAA,iBAEA,MAAAC,EAAAC,SAAAC,cAAA,WAEA,IAAAC,sBAAA,SAAAC,GACAA,EAAA,GAAAC,eACAL,EAAAM,UAAAC,OAAA,QAEAP,EAAAM,UAAAE,IAAA,WAKAC,QAAAR,SAAAC,cAAA,oBAGA,SAAAQ,YACAT,SAAAU,iBAAA,2BAEAC,SAAA,SAAAC,GACAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBACAf,SAAAC,cAAAa,EAAAE,OAAAC,WAAAC,KAAAC,OAEAC,eAAA,CACAC,SAAA,iBC3BA,SAAAC,eACA,MAAAC,EAAAvB,SAAAC,cAAA,qBAEA,IAAA,IAAAuB,EAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,MAAAC,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SACAC,EAAApB,UAAAE,IAAA,WACAkB,EAAAG,QAAAC,SAAAL,EAEAC,EAAAK,QAAAC,cACA,MAAAC,EAAAhC,SAAA0B,cAAA,MACAM,EAAAC,YAAAR,GACAF,EAAAU,YAAAD,IAIA,SAAAD,cAAAjB,GACA,MAAAoB,EAAAC,SAAArB,EAAAE,OAAAY,QAAAC,UACAJ,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,oBAAAO,SACA,MAAAE,EAAApC,SAAA0B,cAAA,OACAU,EAAAH,YAAAR,GACAW,EAAA/B,UAAAE,IAAA,WAEA6B,EAAAN,QAAA,WACAM,EAAA9B,UAGA,MAAA+B,EAAArC,SAAA0B,cAAA,KACAW,EAAAC,YAAA,IACAD,EAAAhC,UAAAE,IAAA,cAEA8B,EAAAP,QAAA,WACAM,EAAA9B,UAEA8B,EAAAH,YAAAI,GAEA,MAAAE,EAAAvC,SAAAC,cAAA,QACAsC,EAAAN,YAAAG,GACAG,EAAAlC,UAAAE,IAAA,cD3CAP,SAAAa,iBAAA,oBAAA,WACAJ,YAEAX,oBCHAE,SAAAa,iBAAA,oBAAA,WACAS","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function(){\r\n    scrollNav();\r\n\r\n    navegacionFija();\r\n});\r\n\r\nfunction navegacionFija(){\r\n\r\n    const barra = document.querySelector('.header'); //Seleccionamos el header que es el que tiene la barra\r\n    //Registrar el IntersectionOberver\r\n    const observer = new IntersectionObserver(function(entries){ //El intersectionobserver es una API de JS para validar que objetos se ven en la pantalla y que no al dar scroll\r\n        if(entries[0].isIntersecting){ //El isIntersecting es un atributo de la API la cual estara viendo en este caso si .sobre-festival es visible en pantalla o no\r\n            barra.classList.remove('fijo'); //Si esta visible le quitamos la clase\r\n        } else{\r\n            barra.classList.add('fijo'); //si no esta visible le agregamos la clase\r\n        }\r\n    });\r\n\r\n    //Elemento a Obervar\r\n    observer.observe(document.querySelector('.sobre-festival'));\r\n}\r\n\r\nfunction scrollNav(){\r\n    const enlaces = document.querySelectorAll('.navegacion-principal a'); //Con esto apuntamos a los encales.\r\n\r\n    enlaces.forEach(function(enlace){ //Ya que enlaces tiene un listado de cosas en con foreach la iteramos cada una de estas\r\n        enlace.addEventListener('click', function(e){\r\n            e.preventDefault(); //Con esto prevenimos la accion por defecto de los Id que creamos\r\n            const seccion = document.querySelector(e.target.attributes.href.value); //Con esto creamos una variable que sacara el valor del atributo href de cada enlace\r\n\r\n            seccion.scrollIntoView({ //Esto es un atributo que permite hacer el salto de linea igual que el Id en el HTMl\r\n                behavior: 'smooth' //Este valor a diferencia del automatico hara ese scroll mas despacio\r\n            });\r\n        \r\n        })\r\n    });\r\n\r\n    \r\n}\r\n","document.addEventListener('DOMContentLoaded', function(){\r\n    crearGaleria();\r\n});\r\n\r\nfunction crearGaleria(){\r\n    const galeria = document.querySelector('.galeria-imagenes'); //Seleccionamos la clase del HTML\r\n\r\n    for(let i = 1; i <= 12; i++){ //Aqui comienza desde 1 hasta 12 porque son las imagenes que tenemos\r\n        const imagen = document.createElement('IMG'); //creamos un elemento img de html\r\n        imagen.src = `build/img/thumb/${i}.webp`; //agregamos el src a ese img antes creado\r\n        imagen.classList.add('pointer');\r\n        imagen.dataset.imagenId = i;\r\n        //Aqui añadimos la función de mostrarImagen en grande\r\n        imagen.onclick = mostrarImagen;\r\n        const lista = document.createElement('LI'); //Creamos un li para agregar esa imagen a ese li\r\n        lista.appendChild(imagen); //Cogemos ese li y le agregamos la imagen\r\n        galeria.appendChild(lista);\r\n    }\r\n}\r\n\r\nfunction mostrarImagen(e){\r\n    const id = parseInt(e.target.dataset.imagenId); //Aqui obtenemos el numero de la imagen por el dataset que creamos arriba\r\n    const imagen = document.createElement('IMG');\r\n    imagen.src = `build/img/grande/${id}.webp`;\r\n    const overlay = document.createElement('DIV');\r\n    overlay.appendChild(imagen); //Creamos un div y le agregamos la imagen grande del paso anterior\r\n    overlay.classList.add('overlay');\r\n    //Cuando damos clic que no sea la X para poder cerrarlo\r\n    overlay.onclick = function(){\r\n        overlay.remove();\r\n    }\r\n    //Boton para cerrar imagen\r\n    const cerrarImagen = document.createElement('P');\r\n    cerrarImagen.textContent = 'X';\r\n    cerrarImagen.classList.add('btn-cerrar');\r\n    //Cuando se presiona la X cierra la imagen\r\n    cerrarImagen.onclick = function(){\r\n        overlay.remove();\r\n    }\r\n    overlay.appendChild(cerrarImagen);\r\n    //Mostrar en el HTML\r\n    const body = document.querySelector('body');\r\n    body.appendChild(overlay); //seleccionamos el body y le agregamos la imagen que ya tiene el overlay\r\n    body.classList.add('fijar-body');\r\n}"]}